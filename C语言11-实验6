/*任务1：第一小题正确答案：*/
#include<stdio.h>
int sum(int,int);//声明函数 
int main()
{
int x,y,f;
scanf("%d %d",&x,&y);
f=sum(x,y);//调用函数 
printf("%d\n",f);
return 0;
}
int sum(int a,int b)//定义函数 
{int c;
c=a+b;
return(c);}

/*任务2：输入下面程序，分析运行结果：8、17*/
#include<stdio.h>
int func (int ,int);//声明函数
int main ( )
{	int k=4,m=1,p1,p2;
	p1=func(k,m) ; 
	p2=func(k,m) ;
	printf("%d,%d\n",p1,p2) ;
	return 0;}
int func (int a,int b)//定义函数
{   static int m=0,i=2;
    i+=m+1;
    m=i+a+b;
    return (m);}/*分析：调用一次函数之后，i=2+0+1，m=3+4+1=8；
    第二次调用函数，此时i=3+8+1=12，m=12+4+1=17，所以输出结果17。
    本题中main函数的k m值未变，定义函数func中i、m值变化了*/


/*任务3.1：输入一无符号整数，求所有数位上数字之和*/
#include<stdio.h>
int main ( )
{unsigned int x,result=0;
scanf("%u",&x);
while(x)
{result+=x%10;//个位+十位+百位这样加下去。 
x/=10;
}
printf("%u\n",result);
return 0;}


#include <>stdio.h>
/*任务3.2使用递归函数，把任意一个正整数颠倒过来输出。*/
void f(int n)//定义函数写开头 
{
    if(n)
	{
        printf("%d",n%10);
        f(n/10);
	}//递归调用 }
	int main()
{
    int x;
    printf("请输入任意正整数：\n");
    scanf("%d",&x);
    if(x<1)
	{
        printf("数据错误!\n");
    }
    f(x);//调用函数 
    printf("\n");
    return 0;}



#include <stdio.h>/*任务3.3判断绝对素数
如果一个正整数是素数，它的反位数也是素数，称这样的数为绝对素数。
在主函数中输入一个整数，输出是否为绝对素数的信息。*/ 
#include<math.h>
 int sushu(unsigned int);//声明判断素数的函数 
 unsigned int rev(unsigned int);//声明求返位函数 
int main()
{unsigned int n,m;
scanf("%u",&n);
if(sushu(n)!=0)
 {m=rev(n);}
else
   {printf("%u不是素数！",n);
   return 0;}
if(sushu(m)!=0)
  {printf("%u是绝对素数",n);}
  else
    {printf("%u是素数，但不是绝对素数",n);}
    return 0;
}
unsigned int rev(unsigned int y)
{
	unsigned int z=0;
	while(y!=0)
	{
		z=z*10+y%10;//求个位数 
		y=y/10;//缩小十倍 
	}
	return z;
}
int sushu(unsigned int n) 
{int i;
	for(i=2;i<n;i++)
	{
		if(n%i==0){return 0;}
		if(i==n){return 1;}
	}}



#include <stdio.h>/*3.4输入4个整数
找出其中最大的数。
用函数的嵌套调用来处理。*/
int max(int,int);//声明函数 
int main()
{int a,b,c,d;
printf("输入4个整数");
scanf("%d %d %d %d",&a,&b,&c,&d);
printf("最大数是%d\n",max(max(max(a,b),c),d));
}//嵌套调用
int max(int x,int y)//定义函数 
{  
return x>y?x:y; 
}


/*3.6求一元二次方程ax2 + bx + c = 0的根，
用3个函数分别求判别式大于0、等于0和小于0时的根，并输出结果。
主函数输入系数a，b，c*/
#include<stdio.h>
#include<math.h> 
void f1();//无解时
double f2(int a,int b,int c);//只有一个解时
double f3(int a,int b,int c);//两个解时
int main()
{
	int a,b,c,d;
	scanf("%d %d %d",&a,&b,&c);
	d=b*b-4*a*c;
if(d<0){f1(a,b,c);}
if(d==0){f2(a,b,c);}
if(d>0){f3(a,b,c);}
 return 0;
}
void f1()
{printf("方程无解！");}
double f2(int a,int b,int c) //只有一个解时
{
	double x;
	x=-b/(2*a);
	printf("方程有一个解\nx1= x2= %.2f",x);//保留小数点后两位 
	return x;
}
double f3(int a,int b,int c) //两个解时
{
	double x1,x2,d;
	d=b*b-4*a*c;
	x1=(-b+sqrt(d))/(2*a);
	x2=(-b-sqrt(d))/(2*a);
	printf("方程有两个不同解\nx1=%.2f , x2=%.2f",x1,x2);//保留小数点后两位 
	return x1;
	return x2;}
